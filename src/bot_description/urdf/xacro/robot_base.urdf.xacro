

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- refer: https://www.bilibili.com/video/BV1mm4y1z7rn -->
    <!-- 1 需要声明变量 -->
    <xacro:property name="PI" value="3.141592653" />
    <!-- 底盘尺寸 -->
    <xacro:property name="CAR_LENGTH" value="0.387" />
    <xacro:property name="CAR_WIDTH" value="0.24" /> <!--0.32-->
    <xacro:property name="CAR_HEIGHT" value="0.066" />
    <!-- 轮胎尺寸 -->
    <xacro:property name="WHEEL_RADIUS" value="0.0635" />    
    <xacro:property name="WHEEL_LEHGTH" value="0.05" /> <!-- wheel width -->
    <xacro:property name="DISTANCE" value="0.033" /> <!-- Ground clearance -->

    <xacro:property name="WHEEL_CAR_DISTANCE" value="0.03" />
    <!-- 轮胎关节偏移量 -->
    <xacro:property name="WHEEL_JOINT_X" value="${CAR_LENGTH/2 - 0.045}" />
    <xacro:property name="WHEEL_JOINT_Y" value="${CAR_WIDTH/2 + WHEEL_CAR_DISTANCE + WHEEL_LEHGTH/2}" />
    <xacro:property name="WHEEL_JOINT_Z" value="${-(CAR_HEIGHT/2+DISTANCE-WHEEL_RADIUS)}" />

    <xacro:property name="PILLAR" value="0.16" />


    <!-- 颜色定义 -->
    <material name="white">
        <color rgba="0.7 0.7 0.7 1.0"/>
    </material>
    <material name="black">
        <color rgba="0.2 0.2 0.2 1.0"/>
    </material>

    <!-- 2 设置base_footprint -->
    <link name="base_footprint">
        <visual>
            <geometry>
                <sphere radius="0.001"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <sphere radius="0.001"/>
            </geometry>
        </collision>
        <xacro:sphere_inertial_matrix mass="0.001" radius="0.001" />
    </link>

    <!-- 3 set base_link -->
    <link name="base_link">
        <visual>
            <geometry>
                <box size="${CAR_LENGTH} ${CAR_WIDTH} ${CAR_HEIGHT}"/>
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <geometry>
                <box size="${CAR_LENGTH} ${CAR_WIDTH} ${CAR_HEIGHT}"/>
            </geometry>
        </collision>
        <xacro:box_inertial_matrix mass="5" length="${CAR_LENGTH}" width="${CAR_WIDTH}" height="${CAR_HEIGHT}" />
    </link>

    <!-- 4 connect base_footprint with base_link -->
    <joint name="base_link2base_footprint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <!-- 车体高度+离地间距 = 0.07/2 + 0.015 = 0.05 -->
        <origin xyz="0.0 0.0 ${CAR_HEIGHT/2+DISTANCE}"/>
    </joint>

    <gazebo reference="base_link">
        <material>Gazebo/White</material>
    </gazebo>

    <!-- 5 定义车轮相关的宏 -->
    <!-- 宏函数创建规则：
            封装复用代码变量以参数形式爆露出去
    -->
    <!-- link : name -->
    <xacro:macro name="wheel_func" params="link_name front_flag left_flag">
        <link name="${link_name}">
            <visual>
                <geometry>
                    <cylinder radius="${WHEEL_RADIUS}" length="${WHEEL_LEHGTH}"/>
                </geometry>
                <material name="black"/>
                <origin rpy="${PI/2} 0.0 0.0"/> 
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="${WHEEL_RADIUS}" length="${WHEEL_LEHGTH}"/>
                </geometry>
                <origin rpy="${PI/2} 0.0 0.0"/> 
            </collision>
            <xacro:cylinder_inertial_matrix mass="1" radius="${WHEEL_RADIUS}" length="${WHEEL_LEHGTH}" />
        </link>

        <gazebo reference="${link_name}">
            <material>Gazebo/Black</material>
        </gazebo>
    
        <joint name="${link_name}2base_link" type="continuous">
            <parent link="base_link"/>
            <child link="${link_name}"/>
            <!-- 平移 z = 车体高度/2 + 离地间距 - 车轮半径 -->
            <origin xyz="${WHEEL_JOINT_X * front_flag} ${WHEEL_JOINT_Y * left_flag} ${WHEEL_JOINT_Z}"/>
            <!-- 旋转 -->
            <axis xyz="0 1 0"/>
        </joint>

        <link name="${link_name}_link">
            <visual>
                <geometry>
                    <cylinder radius="0.01" length="${WHEEL_CAR_DISTANCE}"/>
                </geometry>
                <material name="black" />
                <origin rpy="${PI/2} 0.0 0.0"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="0.01" length="${WHEEL_CAR_DISTANCE}"/>
                </geometry>
                <origin rpy="${PI/2} 0.0 0.0"/>
            </collision>
            <xacro:cylinder_inertial_matrix mass="1" radius="0.01" length="${WHEEL_CAR_DISTANCE}" />
        </link>
        <gazebo reference="${link_name}_link">
            <material>Gazebo/Black</material>
        </gazebo>
        <joint name="${link_name}_joint" type="fixed">
            <parent link="base_link"/>
            <child link="${link_name}_link"/>
            <origin xyz="${WHEEL_JOINT_X * front_flag} ${(CAR_WIDTH/2+WHEEL_CAR_DISTANCE/2) * left_flag} ${WHEEL_JOINT_Z}"/>
        </joint>



        <link name="${link_name}_pillar">
            <visual>
                <geometry>
                    <box size="0.01 0.01 0.16"/>
                </geometry>
                <material name="black" />
                <origin rpy="0.0 0.0 0.0"/>
            </visual>
            <collision>
                <geometry>
                    <box size="0.01 0.01 0.16"/>
                </geometry>
                <origin rpy="0.0 0.0 0.0"/>
            </collision>
            <xacro:box_inertial_matrix mass="1" length="0.01" width="0.01" height="0.16" />
        </link>
        <gazebo reference="${link_name}_pillar">
            <material>Gazebo/Black</material>
        </gazebo>
        <joint name="${link_name}_pillar2base_joint" type="fixed">
            <parent link="base_link"/>
            <child link="${link_name}_pillar"/>
            <origin xyz="${WHEEL_JOINT_X * front_flag} ${(CAR_WIDTH/2 -0.01) * left_flag} ${CAR_HEIGHT/2+PILLAR/2}"/>
        </joint>


    </xacro:macro>
    <!-- joint: name child_link orgin_x origin_y -->
    <xacro:wheel_func link_name="front_left" front_flag="1" left_flag="1"/>
    <xacro:wheel_func link_name="front_right" front_flag="1" left_flag="-1"/>
    <xacro:wheel_func link_name="back_left" front_flag="-1" left_flag="1"/>
    <xacro:wheel_func link_name="back_right" front_flag="-1" left_flag="-1"/>


    <link name="base_link_2">
        <visual>
            <geometry>
                <box size="${CAR_LENGTH} ${CAR_WIDTH} 0.005"/>
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <geometry>
                <box size="${CAR_LENGTH} ${CAR_WIDTH} 0.005"/>
            </geometry>
        </collision>
        <xacro:box_inertial_matrix mass="1" length="${CAR_LENGTH}" width="${CAR_WIDTH}" height="0.005" />
    </link>
    <gazebo reference="base_link_2">
        <material>Gazebo/White</material>
    </gazebo>
    <joint name="base_link2base_link_2" type="fixed">
        <parent link="base_link"/>
        <child link="base_link_2"/>
        <origin xyz="0.0 0.0 ${CAR_HEIGHT/2+PILLAR}"/>
    </joint>




</robot>