cmake_minimum_required(VERSION 3.8)
project(test)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)

add_executable(test_pub_int32       src/test_pub_int32.cpp)
add_executable(test_pub_multiInt32  src/test_pub_multiInt32.cpp)
add_executable(test_pub_multiUint8  src/test_pub_multiUint8.cpp)
add_executable(test_sub_multiUint8  src/test_sub_multiUint8.cpp)

target_include_directories(test_pub_int32 PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>)
target_compile_features(test_pub_int32 PUBLIC c_std_99 cxx_std_17)  # Require C99 and C++17

target_include_directories(test_pub_multiInt32 PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>)
target_compile_features(test_pub_multiInt32 PUBLIC c_std_99 cxx_std_17)  # Require C99 and C++17

target_include_directories(test_pub_multiUint8 PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>)
target_compile_features(test_pub_multiUint8 PUBLIC c_std_99 cxx_std_17)  # Require C99 and C++17

target_include_directories(test_sub_multiUint8 PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>)
target_compile_features(test_sub_multiUint8 PUBLIC c_std_99 cxx_std_17)  # Require C99 and C++17

ament_target_dependencies(
  test_pub_int32
  "rclcpp"
  "std_msgs"
)

ament_target_dependencies(
  test_pub_multiInt32
  "rclcpp"
  "std_msgs"
)

ament_target_dependencies(
  test_pub_multiUint8
  "rclcpp"
  "std_msgs"
)

ament_target_dependencies(
  test_sub_multiUint8
  "rclcpp"
  "std_msgs"
)

install(
  TARGETS 
  test_pub_int32
  test_pub_multiInt32
  test_pub_multiUint8
  test_sub_multiUint8
  DESTINATION lib/${PROJECT_NAME})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
